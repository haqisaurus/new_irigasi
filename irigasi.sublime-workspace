{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"hal",
				"$half2〔variable〕"
			],
			[
				"dataco",
				"$dataCollection〔variable〕"
			],
			[
				"anda",
				"andalanVal"
			],
			[
				"min",
				"min($intakeCollection"
			],
			[
				"andalan",
				"$andalanVal〔variable〕"
			],
			[
				"colo",
				"$coloumnAndalan〔variable〕"
			],
			[
				"colom",
				"$coloumnAndalan〔variable〕"
			],
			[
				"all",
				"allYears"
			],
			[
				"set",
				"$setBulan〔variable〕"
			],
			[
				"intake",
				"$intakeCollection〔variable〕"
			],
			[
				"for",
				"foreach	foreach …"
			],
			[
				"ha",
				"half2"
			],
			[
				"this",
				"$thisMonth〔variable〕"
			],
			[
				"q",
				"$qMonth〔variable〕"
			],
			[
				"mo",
				"$month〔variable〕"
			],
			[
				"year",
				"$yearOption〔variable〕"
			],
			[
				"curr",
				"$currentYear〔variable〕"
			],
			[
				"years",
				"$yearsAgo〔variable〕"
			],
			[
				"deman",
				"demandOnIrigasi〔variable〕"
			],
			[
				"val",
				"value〔argument〕"
			],
			[
				"inlin",
				"inline-block〔value〕"
			],
			[
				"back",
				"background-color: 〔property〕"
			],
			[
				"strto",
				"strtotime〔function〕"
			],
			[
				"dataset",
				"datasets"
			],
			[
				"my",
				"myLineChart"
			],
			[
				"start",
				"startmonth"
			],
			[
				"colle",
				"collection"
			],
			[
				"coll",
				"$collection〔variable〕"
			],
			[
				"datac",
				"$dataCollection〔variable〕"
			],
			[
				"json",
				"json_encode"
			],
			[
				"if",
				"if?	$… = ( … ) ? … : …"
			],
			[
				"spl",
				"$splited〔variable〕"
			],
			[
				"exp",
				"explode〔function〕"
			],
			[
				"arra",
				"array"
			],
			[
				"yea",
				"years"
			],
			[
				"is",
				"isset"
			],
			[
				"half",
				"half1"
			],
			[
				"tex",
				"text-align"
			],
			[
				"ar",
				"array"
			],
			[
				"array",
				"array_map"
			],
			[
				"is_a",
				"is_array"
			],
			[
				"mon",
				"month1"
			],
			[
				"region",
				"region-id"
			],
			[
				"fad",
				"fadeOut"
			],
			[
				"fade",
				"fadeIn"
			],
			[
				"tet",
				"text"
			],
			[
				"time",
				"timestamp"
			],
			[
				"SVGTool-edi",
				"SVGtool-editor-layer"
			]
		]
	},
	"buffers":
	[
		{
			"file": "application/config/routes.php",
			"settings":
			{
				"buffer_size": 7471,
				"line_ending": "Windows"
			}
		},
		{
			"file": "application/config/config.php",
			"settings":
			{
				"buffer_size": 13105,
				"line_ending": "Windows"
			}
		},
		{
			"file": "application/controllers/integrated/admin_page.php",
			"settings":
			{
				"buffer_size": 22604,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed'); \n\nclass Water {\n\n	var $CI = null;\n\n	public function __construct()\n    {\n        // Do something with $params\n    	$this->CI =& get_instance();\n        // using model\n		$this->CI->load->model('water_model');\n    }\n\n    // ADMIN SIDE\n    public function getAllWater($condition = array(), $conditionLike = array(), $limit = null, $offset = null)\n    {\n		return $this->CI->water_model->findLikeWithRegion($condition, $conditionLike, $limit, $offset)->result();\n    }\n\n    public function getSpecificWater($condition = array(), $limit = null, $offset = null)\n	{\n		return $this->CI->water_model->findWithRegion($condition, $limit, $offset)->row();\n	}\n\n	public function getAllYear($condition = array())\n	{\n		return $this->CI->water_model->findYear($condition)->result();\n	}\n\n	public function updateWater($data = array())\n	{\n		$checkData = $this->getSpecificWater(array('date' => $data['date']));\n\n		if ($checkData) {\n\n			unset($data['id']);\n\n			$result = $this->CI->water_model->update(array('water.date' => $data['date']), $data);\n\n			if ($result['status']) {\n				$text 		= 'Data debit air baru berhasil diupdate';\n				$message 	= array(\n					'status' 		=> 1, \n					'data' 			=> '', \n					'text'			=> $text,\n					'notification' 	=> '<div class=\"row\">\n								            <div class=\"col-lg-12\">\n								            	<div class=\"alert alert-success\">\n				                                	' . $text . '\n				                            	</div>\n				                            </div>\n				                        </div>');\n			} else {\n				$text 		= 'Terjadi kesalahan pada saat mengupdate data debit air.';\n				$message 	= array(\n					'status' 		=> 0, \n					'data' 			=> '', \n					'text '			=> $text,\n					'notification' 	=> '<div class=\"row\">\n								            <div class=\"col-lg-12\">\n								                <div class=\"alert alert-danger\">\n								                    ' . $text . '\n								                </div>\n								            </div>\n								        </div>');\n			}\n		} else {\n\n			$result = $this->CI->water_model->insert($data);\n\n			if ($result['status']) {\n				$text 		= 'Data debit air baru berhasil dimasukan';\n				$message 	= array(\n					'status' 		=> 1, \n					'data' 			=> '', \n					'text'			=> $text,\n					'notification' 	=> '<div class=\"row\">\n								            <div class=\"col-lg-12\">\n								            	<div class=\"alert alert-success\">\n				                                	' . $text . '\n				                            	</div>\n				                            </div>\n				                        </div>');\n			} else {\n				$text 		= 'Terjadi kesalahan pada saat memasukan data debit air.';\n				$message 	= array(\n					'status' 		=> 0, \n					'data' 			=> '', \n					'text '			=> $text,\n					'notification' 	=> '<div class=\"row\">\n								            <div class=\"col-lg-12\">\n								                <div class=\"alert alert-danger\">\n								                    ' . $text . '\n								                </div>\n								            </div>\n								        </div>');\n			}\n		}\n		\n		\n		\n    	\n    	$this->CI->session->set_flashdata('message', $message);\n\n    	return $result['status'];\n	}\n\n	public function deleteWater($waterID = 0)\n	{\n		$result = $this->CI->water_model->delete(array('water.id' => $waterID));\n		\n		if ($result['status']) {\n			$text 		= 'Data debit air berhasil dihapus';\n			$message 	= array(\n				'status' 		=> 1, \n				'data' 			=> $waterID, \n				'text'			=> $text,\n				'notification' 	=> '<div class=\"row\">\n							            <div class=\"col-lg-12\">\n							            	<div class=\"alert alert-success\">\n			                                	' . $text . '\n			                            	</div>\n			                            </div>\n			                        </div>');\n		} else {\n			$text 		= 'Terjadi kesalahan pada penghapusan data debit air.';\n			$message 	= array(\n				'status' 		=> 0, \n				'data' 			=> '', \n				'text '			=> $text,\n				'notification' 	=> '<div class=\"row\">\n							            <div class=\"col-lg-12\">\n							                <div class=\"alert alert-danger\">\n							                    ' . $text . '\n							                </div>\n							            </div>\n							        </div>');\n		}\n    	\n    	$this->CI->session->set_flashdata('message', $message);\n\n    	return $result['status'];\n	}\n\n	public function getDataAndalan($regionID = null, $year = null, $month = 1)\n	{\n		$this->CI->load->model('region_model');\n\n		$data = array();\n		$table = array();\n		$dataCollection = array();\n\n		$region = $this->CI->region_model->find()->row();\n		$regionID = $regionID?: $region->id;\n\n		$queryYear = $region ? array('region_id' => $regionID) : array();\n		$allYears = $this->CI->water_model->findYear($queryYear)->result();\n\n		$year = $allYears[0]->tahun;\n\n		$startDay =  $month ? '1-' . $month . '-' . $year : '1-1-2015';\n		$start = $month = strtotime($startDay);\n		$end = strtotime('+11 month', $start);\n\n		while($month <= $end) {\n			$dataCollection[date('F', $month)] = array();\n\n			// collecting first half of month\n			$coloumn1 = array();\n			// collecting second half of month\n			$coloumn2 = array();\n\n			// ============= FROM FIRST MONTH UNTIL HALF MONTH ===========\n			foreach ($allYears as $key => $value1) {\n\n				$startFirst = strtotime($value1->tahun . '-' .  date('F', $month) . '-1' );\n				$endFirst = strtotime('+14 day',  $startFirst);\n			\n				// define half \n				$half1 = array(	\n								date('Y-m-d', $startFirst), \n								date('Y-m-d', $endFirst), \n								$regionID\n							);\n\n				array_push($coloumn1, $this->CI->water_model->debitIntake($half1)->row());\n			}\n\n			// =========== HALF UNTIL LAST =================\n			foreach ($allYears as $key => $value2) {\n\n				$startSecond = strtotime('+1 day',  strtotime($value2->tahun . '-' . date('m-d', $endFirst)));\n				$endSecond = strtotime('last day of',  strtotime($value2->tahun . '-' . date('m-d', $endFirst)));\n\n				$half2 = array(\n								date('Y-m-d', $startSecond), \n								date('Y-m-d', $endSecond), \n								$regionID\n							);\n\n				array_push($coloumn2, $this->CI->water_model->debitIntake($half2)->row());\n			}\n\n\n			array_push($dataCollection[date('F', $month)], $coloumn1);\n			array_push($dataCollection[date('F', $month)], $coloumn2);\n\n			$month = strtotime(\"+1 month\", $month);\n		}\n		// echo \"<pre>\" . print_r($dataCollection, 1) . \"</pre>\";\n		// ======================================================================================================\n		$result = array();\n\n		$coloumnAndalan = round(0.8 * (count($allYears) + 1)) - 1; //because coloumn start with 0 in computer\n       	\n       	// echo $coloumnAndalan;\n       	foreach ($dataCollection as $key => $bulan) {\n\n            $intakeCollection = array();\n\n        	foreach ($bulan as $key => $setBulan) {\n\n        		$intakeCollection = array_map(function($obj) { \n\n        			$intake = empty($obj) ? 1110 : $obj->intake;\n        			return round($intake, 4);\n\n        		}, $setBulan);\n\n        		rsort($intakeCollection);\n        		$andalanVal = isset($intakeCollection[$coloumnAndalan]) ? $intakeCollection[$coloumnAndalan] : min($intakeCollection);\n            	\n            	array_push($result, $andalanVal);\n        	}\n        }\n\n        return $result;\n	}\n\n	// water demand\n	public function getDataWaterDemand($year = null)\n	{\n		$this->CI->load->model('plant_model');\n\n		$year = isset($year) ? : date('Y');\n\n		$startMonth = '1-11-' . ($year - 1);\n		$start = $month = strtotime($startMonth);\n		$end = strtotime(\"+11 month\", $start);\n\n		$condition = array(\n			'start >=' => date('Y-m-d', $start),\n			'start <=' => date('Y-m-d', $end),\n			// 'region_id' => 1\n			);\n\n		$data = $this->CI->plant_model->find($condition)->result();\n\n		$result = array_map(function($item) {\n			\n			$month = strtotime($item->start);\n\n			$newData = array(\n				// 'start' => $item->start,\n				// 'end' => $item->end,\n				// 'rice' => $item->rice * 0.75,\n				// 'palawija' => $item->palawija * 0.3,\n				// 'sugar' => $item->sugar * 0.85,\n				// 'bero' => $item->bero,\n				'month' => date('F', $month),\n				'demand' => (($item->rice * 0.75) + ($item->palawija * 0.3) + ($item->sugar * 0.85) + ($item->bero * 0)) * 0.01,\n				'irigasi' => ((($item->rice * 0.75) + ($item->palawija * 0.3) + ($item->sugar * 0.85) + ($item->bero * 0)) * 0.01) * 1.2,\n				);\n\n			return $newData;\n		}, $data);\n		\n		return $result;\n\n	}\n	// END : ADMIN SIDE\n}",
			"file": "application/libraries/irigasi/Water.php",
			"file_size": 8624,
			"file_write_time": 130951408095441000,
			"settings":
			{
				"buffer_size": 8338,
				"line_ending": "Windows"
			}
		},
		{
			"file": "application/views/integrated/master.php",
			"settings":
			{
				"buffer_size": 4807,
				"line_ending": "Windows"
			}
		},
		{
			"file": "assets/mobile/juru.js",
			"settings":
			{
				"buffer_size": 9250,
				"line_ending": "Windows"
			}
		},
		{
			"file": "application/views/integrated/parts/top-nav/unlogged-in-nav-top.php",
			"settings":
			{
				"buffer_size": 320,
				"line_ending": "Windows"
			}
		},
		{
			"file": "application/views/integrated/pages/auth/login.php",
			"settings":
			{
				"buffer_size": 4149,
				"line_ending": "Windows"
			}
		},
		{
			"file": "application/controllers/integrated/guest_page.php",
			"settings":
			{
				"buffer_size": 343,
				"line_ending": "Windows"
			}
		},
		{
			"file": "application/controllers/welcome.php",
			"settings":
			{
				"buffer_size": 844,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 334.0,
		"last_filter": "install",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 900.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/www/new_irigasi",
		"/D/www/new_irigasi/application",
		"/D/www/new_irigasi/application/config",
		"/D/www/new_irigasi/application/controllers",
		"/D/www/new_irigasi/application/controllers/integrated",
		"/D/www/new_irigasi/application/libraries",
		"/D/www/new_irigasi/application/libraries/irigasi",
		"/D/www/new_irigasi/application/views",
		"/D/www/new_irigasi/application/views/integrated",
		"/D/www/new_irigasi/application/views/integrated/pages",
		"/D/www/new_irigasi/application/views/integrated/pages/auth",
		"/D/www/new_irigasi/assets",
		"/D/www/new_irigasi/assets/mobile",
		"/D/www/new_irigasi/application/controllers",
		"/D/www/new_irigasi/application/controllers/integrated",
		"/D/www/new_irigasi/application/views",
		"/D/www/new_irigasi/application/views/integrated",
		"/D/www/new_irigasi/application/views/integrated/pages",
		"/D/www/new_irigasi/application/views/integrated/pages/auth",
		"/D/www/new_irigasi/application/config"
	],
	"file_history":
	[
		"/Applications/MAMP/htdocs/new_irigasi/assets/frontend/js/main.js",
		"/Applications/MAMP/htdocs/new_irigasi/assets/frontend/css/SimpleBlog.css",
		"/Applications/MAMP/htdocs/new_irigasi/application/views/frontend/master.php",
		"/Applications/MAMP/htdocs/new_irigasi/application/views/frontend/pages/data-water-common.php",
		"/Applications/MAMP/htdocs/new_irigasi/application/controllers/frontend/page_controller.php",
		"/Applications/MAMP/htdocs/new_irigasi/application/views/frontend/part/table-andalan.php",
		"/Applications/MAMP/htdocs/new_irigasi/application/models/water_model.php",
		"/Applications/MAMP/htdocs/new_irigasi/application/views/frontend/pages/plant-view.php",
		"/Applications/MAMP/htdocs/new_irigasi/application/models/plant_model.php",
		"/Applications/MAMP/htdocs/new_irigasi/application/views/frontend/pages/plant-entri.php",
		"/Applications/MAMP/htdocs/new_irigasi/application/config/routes.php",
		"/Applications/MAMP/htdocs/new_irigasi/application/views/frontend/pages/data-andalan.php",
		"/D/www/php.php",
		"/D/www/new_irigasi/dounlink.php",
		"/D/www/kh_paperlust/uploads/design/18/Box-Save-The-Date-Type-1.svg",
		"/D/www/new_irigasi/application/views/frontend/pages/plant-edit.php",
		"/D/www/new_irigasi/application/views/frontend/pages/plant-entri.php",
		"/D/www/new_irigasi/application/models/plant_model.php",
		"/D/www/new_irigasi/application/views/frontend/pages/plant-view.php",
		"/D/www/new_irigasi/application/views/index.html",
		"/C/Users/haqi/Documents/test.html",
		"/D/www/new_irigasi/application/views/frontend/master.php",
		"/D/www/new_irigasi/application/models/water_model.php",
		"/D/www/new_irigasi/application/views/frontend/part/table-andalan.php",
		"/D/www/new_irigasi/application/views/backend/pages/user/update.php",
		"/D/www/new_irigasi/application/views/backend/pages/user/create.php",
		"/D/www/new_irigasi/application/config/routes.php",
		"/D/www/new_irigasi/application/views/frontend/pages/home.php",
		"/D/www/new_irigasi/application/views/frontend/part/table.php",
		"/D/www/new_irigasi/application/views/frontend/part/table-common.php",
		"/D/www/new_irigasi/application/views/frontend/pages/data-andalan.php",
		"/D/www/new_irigasi/application/views/frontend/part/nav-right.php",
		"/D/www/new_irigasi/application/controllers/frontend/page_controller.php",
		"/D/www/new_irigasi/assets/frontend/css/SimpleBlog.css",
		"/D/www/new_irigasi/assets/frontend/js/plugins/jquery.maskedinput.min.js",
		"/D/www/kh_paperlust/application/views/template/home_master.php",
		"/D/www/kh_paperlust/assets/css/design_tool/src/style.less",
		"/D/www/kh_paperlust/assets/js/design_tool/src/lib/cookie.js",
		"/D/www/kh_paperlust/assets/js/design_tool/src/design_tool.js",
		"/D/www/kh_paperlust/application/views/layout/frontend.php",
		"/C/Users/KH-NB-JOG-06/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/KH-NB-JOG-06/AppData/Roaming/Sublime Text 3/Packages/User/insert_date.py",
		"/C/Users/KH-NB-JOG-06/AppData/Roaming/Sublime Text 3/Packages/User/comment.sublime-snippet",
		"/C/Users/KH-NB-JOG-06/AppData/Roaming/Sublime Text 3/Packages/User/print-debut.sublime-snippet",
		"/D/www/new_irigasi/application/config/database.php",
		"/D/localhost/conf/httpd.conf"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"Wide",
			"wide",
			"Wide",
			"wide",
			"Wide",
			"wide",
			"value",
			"month",
			"mm",
			"year",
			"startMonth",
			"Month",
			"},\n",
			"01",
			"trim",
			"required",
			"+ $value->bero * 0",
			"data",
			"display: n",
			"text",
			"startmonth",
			"old",
			"sugar",
			"td",
			"startmonth",
			"th",
			"220",
			"205",
			"151",
			"1\"",
			"id",
			"rice-3",
			"rice-2",
			"rice-1",
			"rice-3",
			"rice-2",
			"rice-1",
			"121",
			"td",
			"data",
			"span",
			"lowest",
			"distinct",
			"/ 15",
			"$i",
			"100px",
			" liter/det",
			"liter/det",
			"left",
			"dm<sup>3</sup>",
			"lit/det",
			"match1",
			"cookie",
			"htdoc"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"folders":
	[
		{
			"path": "D:\\www\\new_irigasi"
		},
		{
			"path": "D:\\www\\new_irigasi\\application\\controllers"
		},
		{
			"path": "D:\\www\\new_irigasi\\application\\libraries"
		},
		{
			"path": "D:\\www\\new_irigasi\\application\\views"
		},
		{
			"path": "D:\\www\\new_irigasi\\application\\models"
		},
		{
			"path": "D:\\www\\new_irigasi\\application\\config"
		}
	],
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "application/config/routes.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7471,
						"regions":
						{
						},
						"selection":
						[
							[
								6458,
								6458
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1800.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "application/config/config.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13105,
						"regions":
						{
						},
						"selection":
						[
							[
								368,
								368
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "application/controllers/integrated/admin_page.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22604,
						"regions":
						{
						},
						"selection":
						[
							[
								17813,
								17813
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 498.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "application/libraries/irigasi/Water.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8338,
						"regions":
						{
						},
						"selection":
						[
							[
								7658,
								7658
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2295.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "application/views/integrated/master.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4807,
						"regions":
						{
						},
						"selection":
						[
							[
								3357,
								3357
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "assets/mobile/juru.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9250,
						"regions":
						{
						},
						"selection":
						[
							[
								7498,
								7498
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4464.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "application/views/integrated/parts/top-nav/unlogged-in-nav-top.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 320,
						"regions":
						{
						},
						"selection":
						[
							[
								247,
								247
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "application/views/integrated/pages/auth/login.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4149,
						"regions":
						{
						},
						"selection":
						[
							[
								315,
								315
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "application/controllers/integrated/guest_page.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 343,
						"regions":
						{
						},
						"selection":
						[
							[
								162,
								162
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "application/controllers/welcome.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 844,
						"regions":
						{
						},
						"selection":
						[
							[
								680,
								680
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 83.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 29.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"mas",
				"application\\views\\frontend\\master.php"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"D:\\Sublime-projects\\paperlust.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 231.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
